"Разработка распознавателя модельного языка программирования"

#123312

# <выражение>::= <операнд>{<операции_группы_отношения> <операнд>}
# <операнд>::= <слагаемое> {<операции_группы_сложения> <слагаемое>}
# <слагаемое>::= <множитель> {<операции_группы_умножения> <множитель>}
# <множитель>::= <идентификатор> | <число> | <логическая_константа> |
#  <унарная_операция> <множитель> | «(»<выражение>«)»
# <число>::= <целое> | <действительное>
# <логическая_константа>::= true | false

# <идентификатор>::= <буква> {<буква> | <цифра>}
# <буква>::= A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T |
#  U | V | W | X | Y | Z | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p
#  q | r | s | t | u | v | w | x | y | z
# <цифра>::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

# <целое>::= <двоичное> | <восьмеричное> | <десятичное> |
#  <шестнадцатеричное>
# <двоичное>::= {/ 0 | 1 /} (B | b)
# <восьмеричное>::= {/ 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 /} (O | o)
# <десятичное>::= {/ <цифра> /} [D | d]
# <шестнадцатеричное>::= <цифра> {<цифра> | A | B | C | D | E | F | a | b |
#  c | d | e | f} (H | h)

# <действительное>::= <числовая_строка> <порядок> |
#  [<числовая_строка>] . <числовая_строка> [порядок]
# <числовая_строка>::= {/ <цифра> /}
# <порядок>::= ( E | e )[+ | -] <числовая_строка>


# Операции языка
# <операции_группы_отношения>:: = < > | = | < | <= | > | >=
# <операции_группы_сложения>:: = + | - | or
# <операции_группы_умножения>::= * | / | and
# <унарная_операция>::= not

# Структура программы
# <программа>::= «{» {/ (<описание> | <оператор>) ; /} «}»

# Синтаксис команд описания данных
# <описание>::= <тип> <идентификатор> { , <идентификатор> }

# Описание типов данных
# <тип>::= int | float | bool

# <оператор>::= <составной> | <присваивания> | <условный> |
#  <фиксированного_цикла> | <условного_цикла> | <ввода> |
#  <вывода>

# Синтаксис составного оператора
# <составной>::= «[» <оператор> { ( : | перевод строки) <оператор> } «]»

# Синтаксис оператора присваивания
# <присваивания>::= <идентификатор> as <выражение>

# Синтаксис оператора условного перехода
# <условный>::= if <выражение> then <оператор> [ else <оператор>]

# Синтаксис оператора цикла с фиксированным числом повторений
# <фиксированного_цикла>::= for <присваивания> to <выражение> do
# <оператор>

# Синтаксис условного оператора цикла
# <условного_цикла>::= while <выражение> do <оператор>

# Синтаксис оператора ввода
# <ввода>::= read «(»<идентификатор> {, <идентификатор> } «)»

# Синтаксис оператора вывода
# <вывода>::= write «(» <выражение> {, <выражение> } «)»
# /**/ - многострочные комментарии

